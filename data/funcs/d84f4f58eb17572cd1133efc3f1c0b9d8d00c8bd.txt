DOMAIN_SEPERATOR()
activate()
activated()
MIN_TRANSFER_TIMESPAN()
0x1b08345a
pendingReturns(address)
setGameIdCntr(uint256)
profitTransferTimeSpan()
minStake()
withdraw()
unpause()
serverEndGame(uint32,int256,bytes32,bytes32,uint256,address,address,bytes)
lastProfitTransferTimestamp()
BET_TYPEHASH()
claimOwnership()
addHouseStake()
MIN_TIMEOUT()
timePaused()
conflictRes()
paused()
withdrawHouseStake(uint256)
destroy()
gameIdGame(uint256)
pause()
withdrawAll()
userEndGameConflict(uint32,uint8,uint256,uint256,int256,bytes32,bytes32,uint256,address,bytes,bytes32)
houseProfit()
ideal_warn_timed(uint256,uint128)
serverEndGameConflict(uint32,uint8,uint256,uint256,int256,bytes32,bytes32,uint256,address,bytes,address,bytes32,bytes32)
MAX_TRANSFER_TIMSPAN()
userCancelActiveGame(uint256)
setProfitTransferTimeSpan(uint256)
activateConflictResolution()
newConflictRes()
serverCancelActiveGame(address,uint256)
createGame(bytes32,uint256,uint256,bytes32,bytes)
userForceGameEnd(uint256)
TIMEOUT_DESTROY()
EIP712DOMAIN_TYPEHASH()
houseStake()
updateConflictResolution(address)
serverForceGameEnd(address,uint256)
setStakeRequirements(uint128,uint128)
houseAddress()
serverAddress()
updateTime()
MAX_TIMEOUT()
pendingOwner()
activeGames()
userEndGame(uint32,int256,bytes32,bytes32,uint256,address,bytes)
maxStake()
setHouseAddress(address)
transferOwnership(address)
gameIdCntr()
transferProfitToHouse()
minHouseStake(uint256)
minHouseStake(uint256)
userForceGameEnd(uint8,uint256,uint256,int256,uint256,uint256)
0x8a94839a
maxBalance()
maxBalance()
isValidBet(uint8,uint256,uint256)
maxBalance()
isValidBet(uint8,uint256,uint256)
conflictEndFine()
endGameConflict(uint8,uint256,uint256,int256,uint256,bytes32,bytes32)
maxBalance()