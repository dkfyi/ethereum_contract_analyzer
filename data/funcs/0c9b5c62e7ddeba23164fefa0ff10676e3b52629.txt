PIXEL_COUNT()
getCanvasPainters(uint32)
offerCanvasForSale(uint32,uint256)
0x29ac4b59
getCanvasCount()
withdraw()
getCanvasState(uint32)
minimumBidAmount()
getCurrentSellOffer(uint32)
isCanvasFinished(uint32)
activeCanvasCount()
setMinimumBidAmount(uint256)
getTime()
COMMISSION()
MAX_ACTIVE_CANVAS()
STATE_NOT_FINISHED()
HEIGHT()
balanceOf(address)
calculateCommission(uint32)
getCurrentBuyOffer(uint32)
MAX_CANVAS_COUNT()
getPixelCount()
acceptSellOffer(uint32)
0x7ee8b2f8
getCanvasByState(uint8)
ideal_warn_timed(uint256,uint128)
getCanvasByOwner(address)
addRewardToPendingWithdrawals(uint32)
makeBid(uint32)
cancelBuyOffer(uint32)
STATE_OWNED()
setPixel(uint32,uint32,uint8)
acceptBuyOffer(uint32,uint256)
getCanvasBitmap(uint32)
getLastBidForCanvas(uint32)
COMMISSION_DIVIDER()
makeBuyOffer(uint32)
ACTION_INITIAL_BIDDING()
getCanvasesWithSellOffer(bool)
cancelSellOffer(uint32)
offerCanvasForSaleToAddress(uint32,uint256,address)
ACTION_BUY_OFFER_ACCEPTED()
WIDTH()
STATE_INITIAL_BIDDING()
ACTION_SELL_OFFER_ACCEPTED()
addCommissionToPendingWithdrawals(uint32)
0xd8a02474
getCanvasInfo(uint32)
getCanvasPaintedPixelsCount(uint32)
createCanvas()
transferOwnership(address)
getPixelAuthor(uint32,uint32)