trader()
bucketHolding(bytes32,address)
executeEtherDeltaSell(uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,bytes32,uint256)
createBucket(bytes32[])
setEtherDeltaExecutor(address)
model(address)
portfolioManager()
getAssets()
setCollectibleExposure(address)
bucketManager()
setBucketManager(address)
ideal_warn_timed(uint256,uint128)
bucketValue(bytes32)
setPortfolioManager(address)
numAssets()
bucketClosureTime(bytes32)
setTrader(address)
setModel(address[],uint256[])
executeEtherDeltaBuy(uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,bytes32,uint256)
destroy(address[])
assets(uint256)
setAssets(address[])
calculateBucketId(bytes32[])
bucketExists(bytes32)
transferOwnership(address)
destroyBucket(bytes32)
many_msg_babbage(bytes1)
sellTokens(uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32)
getClosingTime(bytes32)
collect(bytes32)
buyTokens(uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32)
balanceOf(address)
many_msg_babbage(bytes1)
0x39c79e0c