gemCriticalRateConversion()
upgradeGems()
challengeFee()
setSettingValues(uint8,uint8,uint16,uint16,uint16,uint16,uint16,uint8,uint8,uint32,uint32,uint8)
levelUp(uint256,uint16,uint16,uint16,uint16,uint16,uint16)
getTotalDeveloperCut()
starterPackCardLevel()
setChallengeFee(uint256)
maxBattleRounds()
unpause()
upgradeFee()
distributeTokensToRank(uint256[],uint256)
setCardDrawPrice(uint256)
eventCardRangeMax()
setStarterPack(uint256,uint16)
starterPackPrice()
gemAttackConversion()
paused()
0x5cc236ce
gemSpeedConversion()
withdrawBalance()
0x60e71f2f
setStarterPackOnSale(bool)
hogsmashToken()
upgradeGemsSpecial()
referrerFee()
updateAvatar(uint256,uint256)
setBattleStart(bool)
pause()
silverPercentage()
getTotalRankTokens()
ideal_warn_timed(uint256,uint128)
0x8dc10768
getCardIdByRank(uint256)
getCard(uint256)
draftNewCard()
cardDrawPrice()
gemHpConversion()
draftNewCardWithReferrer(address)
generateInitialCard(uint16)
marketplace()
0xb47cc556
setAvatarFee(uint256)
setUpgradeFee(uint256)
gemDefenseConversion()
historyId()
goldPercentage()
currentElement()
eventCardRangeMin()
developerCut()
buyStarterPack()
transferOwnership(address)
setDeveloperCut(uint256)
setReferrerFee(uint256)
avatarFee()
getSettingValues()
0x05f5e100
0x31a9108f
ownerOf(uint256)
0x01000000
0x31a9108f
ownerOf(uint256)
0x31a9108f
ownerOf(uint256)
0x01000000
0x31a9108f
ownerOf(uint256)
0x01000000
ownerOf(uint256)
0x01000000
setApprovalForAllByContract(address,address,bool)
setApprovalForAllByContract(address,address,bool)
setApprovalForAllByContract(address,address,bool)
setApprovalForAllByContract(address,address,bool)
balanceOf(address)
setApprovalForAllByContract(address,address,bool)
setApprovalForAllByContract(address,address,bool)
isMarketplace()
setApprovalForAllByContract(address,address,bool)
setApprovalForAllByContract(address,address,bool)
0x01000000
0x01000000
0x31a9108f
ownerOf(uint256)
mint(address)