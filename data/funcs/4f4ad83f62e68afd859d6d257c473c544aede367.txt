gemCriticalRateConversion()
pizza_mandate_apology(uint256)
name()
getApproved(uint256)
approve(address,uint256)
upgradeGems()
0x150f8b07
totalSupply()
challengeFee()
setSettingValues(uint8,uint8,uint16,uint16,uint16,uint16,uint16,uint8,uint8,uint32,uint32,uint8)
gasprice_bit_ether(int128)
levelUp(uint256,uint16,uint16,uint16,uint16,uint16,uint16)
getTotalDeveloperCut()
starterPackCardLevel()
tokenOfOwnerByIndex(address,uint256)
setChallengeFee(uint256)
maxBattleRounds()
unpause()
upgradeFee()
safeTransferFrom(address,address,uint256)
distributeTokensToRank(uint256[],uint256)
setCardDrawPrice(uint256)
eventCardRangeMax()
exists(uint256)
tokenByIndex(uint256)
setStarterPack(uint256,uint16)
starterPackPrice()
gemAttackConversion()
paused()
0x5cc236ce
gemSpeedConversion()
withdrawBalance()
0x60e71f2f
ownerOf(uint256)
setStarterPackOnSale(bool)
upgradeGemsSpecial()
referrerFee()
balanceOf(address)
updateAvatar(uint256,uint256)
setBattleStart(bool)
pause()
silverPercentage()
getTotalRankTokens()
ideal_warn_timed(uint256,uint128)
getCardIdByRank(uint256)
getCard(uint256)
draftNewCard()
cardDrawPrice()
link_classic_internal(uint64,int64)
gemHpConversion()
draftNewCardWithReferrer(address)
generateInitialCard(uint16)
setApprovalForAll(address,bool)
marketplace()
0xb47cc556
setAvatarFee(uint256)
safeTransferFrom(address,address,uint256,bytes)
setUpgradeFee(uint256)
gemDefenseConversion()
0xc7e93f2c
tokenURI(uint256)
historyId()
goldPercentage()
currentElement()
eventCardRangeMin()
developerCut()
0xe87c4813
isApprovedForAll(address,address)
buyStarterPack()
transferOwnership(address)
setDeveloperCut(uint256)
setReferrerFee(uint256)
avatarFee()
getSettingValues()
0x05f5e100
0x01000000
0x01000000
0x01000000
isMarketplace()
0x01000000
0x01000000
onERC721Received(address,uint256,bytes)