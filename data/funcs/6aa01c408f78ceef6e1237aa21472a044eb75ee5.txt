proposals(uint256)
numberOfHolders()
creator()
name()
approve(address,uint256)
0x0e882129
cloneTokens(uint256,uint256)
cloneProposal(uint256,string,bytes32,uint256,uint256,uint256,uint256)
totalSupply()
FundingRules(uint256)
rewardToken(address,uint256,uint256)
ableTransfer()
gasprice_bit_ether(int128)
withdraw(uint256)
available_assert_time(uint16,uint64)
updateClient(address)
newProposal(uint256,string,bytes32)
buySharesFor(address)
blockTransfer(address,uint256)
closeSetup()
ClosingTimeForCloning()
setFundingStartTime(uint256)
smartContractStartDate()
FundedAmount(uint256)
recipient()
balanceOf(address)
actualPriceDivisor()
blockedDeadLine(address)
numberOfProposals()
Client()
transferable()
link_classic_internal(uint64,int64)
initialTokenSupply(address,uint256)
sendTo(address,uint256)
many_msg_babbage(bytes1)
setFundingRules(address,bool,uint256,uint256,uint256,uint256,uint256)
setTokenPriceProposal(uint256,uint256,uint256)
setFundingFueled()
HolderAddress(uint256)
fundingMaxAmount(address)
disableTransfer(uint256)
clonedFrom()
0xd3bd465e
buyShares()
allowance(address,address)
daoManager()
updateRecipient(address)
numberOfHolders()
HolderAddress(uint256)
balanceOf(address)
ClosingTimeForCloning()
Client()
0xbbf81e00