getWorkerPool(address,uint256)
unregisterWorkerAffectation(address,address)
registerWorkerAffectation(address,address)
createWorkerPool(string,uint256,uint256,uint256,address)
isWorkerPoolRegistered(address)
getWorkerPoolsCount(address)
setImmutableOwnership(address)
m_totalWorkerPoolCount()
getWorkerAffectation(address)
getWorkerPoolByIndex(uint256)
m_owner()
m_changeable()
contribute(address,bytes32,bytes32,uint8,bytes32,bytes32)
finalizeWork(address,string,string,string)
subscribeToPool()
getContribution(address,address)
revealConsensus(address,bytes32)
0x1f1e7406
0x2b8fd18a
getContributorsCount(address)
existingContribution(address,address)
0x41cb01ad
0x45b99d28
reveal(address,bytes32)
0x6ab6936a
emitWorkOrder(address,uint256)
0x7bd220bb
allowWorkersToContribute(address,address[],address)
evictWorker(address)
0x87639c68
claimFailedConsensus(address)
0x8d7db2f7
getWorkerAddress(uint256)
0xb32ca9c5
getContributor(address,uint256)
setImmutableOwnership(address)
0xc6c5b072
getWorkersCount()
0xcc6f06a3
allowWorkerToContribute(address,address,address)
m_owner()
m_changeable()
0xe2d36ef5
unsubscribeFromPool()
getWorkerIndex(address)
changeWorkerPoolPolicy(uint256,uint256,uint256,uint256)
0xf20e56ec
getConsensusDetails(address)
reopen(address)
isWoidRegistred(address)
0xe329c478
getWorkerScore(address)
lockForWork(address,address,uint256)
isWoidRegistred(address)
finalizeWorkOrder(address,string,string,string)
registerToPool(address)
isWoidRegistred(address)
startRevealingPhase()
getCategoryWorkClockTimeRef(uint256)
getMarketOrderCategory(uint256)
0xecc40f64
isWoidRegistred(address)
0xe329c478
getMarketOrderCategory(uint256)
getCategoryWorkClockTimeRef(uint256)
getMarketOrderValue(uint256)
getMarketOrderWorkerpoolOwner(uint256)
evictWorker(address)
unlockForWork(address,address,uint256)
isWoidRegistred(address)
0xe329c478
getWorkerStatus(address)
unregisterFromPool(address)
isWoidRegistred(address)
reActivate()
unlockForWork(address,address,uint256)
rewardForWork(address,address,uint256,bool)
seizeForWork(address,address,uint256,bool)
rewardForWork(address,address,uint256,bool)