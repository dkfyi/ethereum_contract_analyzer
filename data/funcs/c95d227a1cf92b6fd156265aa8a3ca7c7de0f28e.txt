playerEndGameConflict(uint32,uint8,uint16,uint256,int256,bytes32,bytes32,uint256,address,bytes,bytes32)
setOwner(address)
MIN_TRANSFER_TIMESPAN()
playerGameId(address)
pendingReturns(address)
profitTransferTimeSpan()
minStake()
withdraw()
unpause()
lastProfitTransferTimestamp()
createGame(bytes32)
typeHash()
addHouseStake()
MIN_TIMEOUT()
timePaused()
conflictRes()
paused()
playerForceGameEnd(uint256)
cancelGame(uint256)
withdrawHouseStake(uint256)
destroy()
gameIdGame(uint256)
pause()
withdrawAll()
houseProfit()
ideal_warn_timed(uint256,uint128)
setStakeRequirements(uint256,uint256)
MAX_TRANSFER_TIMSPAN()
setProfitTransferTimeSpan(uint256)
activateConflictResolution()
newConflictRes()
serverCancelActiveGame(address,uint256)
playerEndGame(uint32,uint8,uint16,uint256,int256,bytes32,bytes32,uint256,address,bytes)
playerCancelActiveGame(uint256)
serverEndGameConflict(uint32,uint8,uint16,uint256,int256,bytes32,bytes32,uint256,address,bytes,address,bytes32,bytes32)
TIMEOUT_DESTROY()
acceptGame(address,uint256,bytes32)
houseStake()
updateConflictResolution(address)
serverForceGameEnd(address,uint256)
serverEndGame(uint32,uint8,uint16,uint256,int256,bytes32,bytes32,uint256,address,address,bytes)
houseAddress()
serverAddress()
updateTime()
MAX_TIMEOUT()
activeGames()
maxStake()
setHouseAddress(address)
gameIdCntr()
rejectGame(address,uint256)
transferProfitToHouse()
minHouseStake(uint256)
playerForceGameEnd(uint8,uint256,uint256,int256,uint256,uint256)
minHouseStake(uint256)
serverForceGameEnd(uint8,uint256,uint256,int256,uint256,uint256)
maxBalance()
isValidBet(uint8,uint256,uint256)
maxBalance()
maxBalance()
maxBalance()
isValidBet(uint8,uint256,uint256)
endGameConflict(uint8,uint256,uint256,int256,uint256,bytes32,bytes32)